#!/usr/bin/env bash
# @import lang/required
# @import console/error

function commit () {
    local tag="$1"
    local message="$1"
    local code=0

    required "${tag}" || {
        error "specify a version"
        ((code++))
    }

    required "${GIT_USER_NAME}" || {
        error "Set the 'GIT_USER_NAME' environment variable"
        ((code++))
    }
    required "${GIT_USER_EMAIL}" || {
        error "Set the 'GIT_USER_EMAIL' environment variable"
        ((code++))
    }
    required "${GIT_USER_SIGNINGKEY}" || {
        error "Set the 'GIT_USER_SIGNINGKEY' environment variable"
        ((code++))
    }

    required "${message}" || message="${tag}"

    local versionRegex="v([0-9]+)\.([0-9]+)\.([0-9]+)([\.0-9A-Za-z-]*)?"

    if [[ "${tag}" =~ ^${versionRegex}$ ]] || [[ "${tag}" == "none" ]]
    then
        true
    else
        error "Invalid version"
        ((code++))
    fi

    {
        git diff --exit-code &&
        git diff --cached --exit-code
    } > /dev/null ||  {
        error "Working tree is not clean"
        ((code++))
    }


    if (( code == 0 ))
    then
        (
            git config user.name "${GIT_USER_NAME}"
            git config user.email "${GIT_USER_EMAIL}"
            git config user.signingkey "${GIT_USER_SIGNINGKEY}"

            git tag -d "${tag}" &> /dev/null || true
            git tag -m "${message}" -s "${tag}"

            git push --quiet --follow-tags
        ) || ((code++))
    fi

    {
        git config --unset user.name
        git config --unset user.email
        git config --unset user.signingkey
    } &> /dev/null || true

    return "${code}"
}
